(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{386:function(t,e,s){"use strict";s.r(e);var n=s(42),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://juejin.im/entry/58ad48c7da2f6054bd1c23a8",target:"_blank",rel:"noopener noreferrer"}},[t._v("页面重绘和回流以及优化"),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[t._v("浏览器把获取到的HTML代码解析成"),s("code",[t._v("1个DOM树")]),t._v("，HTML中的每个tag都是DOM树中的1个节点，根节点就是我们常用的document对象。DOM树里包含了所有HTML标签，包括display:none隐藏，还有用JS动态添加的元素等。")]),t._v(" "),s("li",[t._v("浏览器把所有样式(用户定义的CSS和用户代理)"),s("code",[t._v("解析成样式结构体")]),t._v("，在解析的过程中会去掉浏览器不能识别的样式，比如IE会去掉-moz开头的样式，而FF会去掉_开头的样式。")]),t._v(" "),s("li",[t._v("DOM Tree 和样式结构体组合后"),s("code",[t._v("构建render tree")]),t._v(", render tree类似于DOM tree，但区别很大，render tree能识别样式，render tree中每个NODE都有自己的style，而且 render tree不包含隐藏的节点 (比如display:none的节点，还有head节点)，因为这些节点不会用于呈现，而且不会影响呈现的，所以就不会包含到 render tree中。注意 visibility:hidden隐藏的元素还是会包含到 render tree中的，因为visibility:hidden 会影响布局(layout)，会占有空间。根据CSS2的标准，"),s("code",[t._v("render tree中的每个节点都称为Box (Box dimensions)，理解页面元素为一个具有填充、边距、边框和位置的盒子")])]),t._v(" "),s("li",[t._v("一旦render tree构建完毕后，浏览器就可以根据render tree来绘制页面了。")])]),t._v(" "),s("h4",{attrs:{id:"回流与重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回流与重绘"}},[t._v("#")]),t._v(" 回流与重绘")]),t._v(" "),s("ol",[s("li",[t._v("当render tree中的一部分(或全部)因为元素的"),s("code",[t._v("规模尺寸，布局，隐藏等改变而需要重新构建。这就称为回流(reflow)")]),t._v("。每个页面至少需要一次回流，就是在页面第一次加载的时候。"),s("code",[t._v("在回流的时候，浏览器会使渲染树中受到影响的部分失效")]),t._v("，并重新构造这部分渲染树，完成回流后，浏览器会重新绘制受影响的部分到屏幕中，该过程成为重绘。")]),t._v(" "),s("li",[t._v("当render tree中的一些元素需要更新属性，而这些属性只是影响"),s("strong",[t._v("元素的外观，风格")]),t._v("，而"),s("code",[t._v("不会影响布局的，比如background-color。则就叫称为重绘")]),t._v("。")])]),t._v(" "),s("h5",{attrs:{id:"注意：回流必将引起重绘，而重绘不一定会引起回流。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意：回流必将引起重绘，而重绘不一定会引起回流。"}},[t._v("#")]),t._v(" 注意：回流必将引起重绘，而重绘不一定会引起回流。")]),t._v(" "),s("p",[s("strong",[t._v("当页面布局和几何属性改变时就需要回流。下述情况会发生浏览器回流：")])]),t._v(" "),s("ol",[s("li",[t._v("添加或者删除可见的DOM元素；")]),t._v(" "),s("li",[t._v("元素位置改变；")]),t._v(" "),s("li",[t._v("元素尺寸改变——边距、填充、边框、宽度和高度")]),t._v(" "),s("li",[t._v("内容改变——比如文本改变或者图片大小改变而引起的计算值宽度和高度改变；")]),t._v(" "),s("li",[t._v("页面渲染初始化；")]),t._v(" "),s("li",[t._v("浏览器窗口尺寸改变——resize事件发生时；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("padding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回流+重绘")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("border "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1px solid red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再一次 回流+重绘")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再一次重绘")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backgroundColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#ccc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再一次 重绘")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fontSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"14px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再一次 回流+重绘")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加node，再一次 回流+重绘")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"聪明的浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聪明的浏览器"}},[t._v("#")]),t._v(" 聪明的浏览器")]),t._v(" "),s("p",[t._v("很多浏览器都会优化这些操作，浏览器会维护1个队列，把所有会引起回流、重绘的操作放入这个队列，等队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会flush队列，进行一个批处理。这样就会让多次的回流、重绘变成一次回流重绘。")]),t._v(" "),s("p",[t._v("虽然有了浏览器的优化，但有时候我们写的一些代码可能会强制浏览器提前flush队列，这样浏览器的优化可能就起不到作用了。当你请求向浏览器请求一些 style信息的时候，就会让浏览器flush队列，比如：")]),t._v(" "),s("ol",[s("li",[t._v("offsetTop, offsetLeft, offsetWidth, offsetHeight")]),t._v(" "),s("li",[t._v("scrollTop/Left/Width/Height")]),t._v(" "),s("li",[t._v("clientTop/Left/Width/Height")]),t._v(" "),s("li",[t._v("width,height")]),t._v(" "),s("li",[t._v("请求了getComputedStyle(), 或者 IE的 currentStyle")])]),t._v(" "),s("p",[t._v("当你请求上面的一些属性的时候，浏览器为了给你最精确的值，需要flush队列，因为队列中可能会有影响到这些值的操作。即使你获取元素的布局和样式信息跟最近发生或改变的布局信息无关，浏览器都会强行刷新渲染队列。")]),t._v(" "),s("h4",{attrs:{id:"如何减少回流、重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何减少回流、重绘"}},[t._v("#")]),t._v(" 如何减少回流、重绘")]),t._v(" "),s("p",[t._v("减少回流、重绘其实就是需要减少对render tree的操作"),s("code",[t._v("（合并多次多DOM和样式的修改）")]),t._v("，"),s("code",[t._v("并减少对一些style信息的请求")]),t._v("，尽量利用好浏览器的优化策略。具体方法有：")]),t._v(" "),s("ol",[s("li",[t._v("直接改变className，如果动态改变样式，则使用"),s("strong",[t._v("cssText")]),t._v("（考虑没有优化的浏览器）")]),t._v(" "),s("li",[t._v("让要操作的元素进行”离线处理”，处理完后一起更新\n"),s("ul",[s("li",[t._v("使用DocumentFragment进行缓存操作,引发一次回流和重绘；")]),t._v(" "),s("li",[t._v("使用display:none技术，只引发两次回流和重绘；")]),t._v(" "),s("li",[t._v("使用cloneNode(true or false) 和 replaceChild 技术，引发一次回流和重绘；")])])]),t._v(" "),s("li",[t._v("不要经常访问会引起浏览器flush队列的属性，如果你确实要访问，利用缓存")])]),t._v(" "),s("p",[s("strong",[t._v("参考文章：")])]),t._v(" "),s("ul",[s("li",[t._v("[浏览器的重绘"),s("a",{attrs:{href:"http://www.css88.com/archives/4991",target:"_blank",rel:"noopener noreferrer"}},[t._v("repaints]与重排[reflows]"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://kb.cnblogs.com/page/64064/",target:"_blank",rel:"noopener noreferrer"}},[t._v("高性能WEB开发–页面呈现、重绘、回流"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);