(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{394:function(e,t,r){"use strict";r.r(t);var n=r(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Vue SSR（nuxt）  "),r("a",{attrs:{href:"https://juejin.im/post/5cc81e1a6fb9a032414f695b",target:"_blank",rel:"noopener noreferrer"}},[e._v("nuxt爬坑"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://juejin.im/post/5a9b8417518825558251ce15#heading-3",target:"_blank",rel:"noopener noreferrer"}},[e._v("记录面试中一些回答不够好的题（Vue 居多）SSR部分"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://jkchao.cn/article/5a11155fb520d115154c8fa1",target:"_blank",rel:"noopener noreferrer"}},[e._v("服务端渲染 vs 客户端渲染"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("img",{attrs:{src:"https://static.jkchao.cn/ssr5.png",alt:"duibi"}})]),e._v(" "),r("h4",{attrs:{id:"vue-ssr-的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-ssr-的实现"}},[e._v("#")]),e._v(" Vue SSR 的实现")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/4/161ef7bf329e8812?imageslim",alt:"yuanli"}})]),e._v(" "),r("p",[e._v("其基本实现原理：")]),e._v(" "),r("ul",[r("li",[e._v("app.js 作为客户端与服务端的公用入口，导出 Vue 根实例，供客户端 entry 与服务端 entry 使用。客户端 entry 主要作用挂载到 DOM 上，服务端 entry 除了创建和返回实例，还进行路由匹配与数据预获取。")]),e._v(" "),r("li",[e._v("webpack 为客服端打包一个 Client Bundle ，为服务端打包一个 Server Bundle 。")]),e._v(" "),r("li",[e._v("服务器接收请求时，会根据 url，加载相应组件，获取和解析异步数据，创建一个读取 Server Bundle 的 BundleRenderer，然后生成 html 发送给客户端。")]),e._v(" "),r("li",[e._v("客户端混合，客户端收到从服务端传来的 DOM 与自己的生成的 DOM 进行对比，把不相同的 DOM 激活，使其可以能够响应后续变化，这个过程称为"),r("a",{attrs:{href:"https://ssr.vuejs.org/zh/hydration.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("客户端激活 "),r("OutboundLink")],1),e._v("。为确保混合成功，客户端与服务器端需要共享同一套数据。在服务端，可以在渲染之前获取数据，填充到 stroe 里，这样，在客户端挂载到 DOM 之前，可以直接从 store 里取数据。首屏的动态数据通过 "),r("code",[e._v("window.__INITIAL_STATE__")]),e._v(" 发送到客户端。")])]),e._v(" "),r("p",[e._v("Vue SSR 的实现，主要就是把 Vue 的组件输出成一个完整 HTML, "),r("a",{attrs:{href:"https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-server-renderer"),r("OutboundLink")],1),e._v(" 就是干这事的。")]),e._v(" "),r("p",[e._v("纯客户端输出过程有一个 complier 过程（「"),r("a",{attrs:{href:"#header-11"}},[e._v("下题")]),e._v("」中有一个简单描述），主要作用是将 template 转化成 render 字符串 。")]),e._v(" "),r("p",[e._v("Vue SSR 需要做的事多点（输出完整 HTML），除了 complier -> vnode，还需如数据获取填充至 HTML、客户端混合（hydration）、缓存等等。")]),e._v(" "),r("p",[e._v("相比于其他模板引擎（ejs, jade 等），最终要实现的目的是一样的，性能上可能要差点。")]),e._v(" "),r("p",[e._v("参考：")]),e._v(" "),r("ul",[r("li",[e._v("https://ssr.vuejs.org/zh/")]),e._v(" "),r("li",[e._v("https://segmentfault.com/a/1190000006701796")])]),e._v(" "),r("h4",{attrs:{id:"vue服务端渲染ssr-报错-window-is-not-definded解决-原文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue服务端渲染ssr-报错-window-is-not-definded解决-原文"}},[e._v("#")]),e._v(" vue服务端渲染ssr 报错 window is not definded解决   "),r("a",{attrs:{href:"https://blog.csdn.net/gaoqiang1112/article/details/80680002",target:"_blank",rel:"noopener noreferrer"}},[e._v("原文"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("多数是因为服务端渲染 页面是又后台路径跳转过来的 此时页面还没有渲染出来 所以window对象还没有诞生")]),e._v(" "),r("p",[e._v("但是你的用的各种第三方js文件 有很多都使用了window")]),e._v(" "),r("p",[e._v("所以我们通过vue的生命周期函数去判断window对象  其实此时加不加载并不影响")]),e._v(" "),r("p",[e._v("添加判断即可")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//  引入需要window的外置js")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("typeof")]),e._v(" window "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'undefined'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// require('tinymce/skins')")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),r("h4",{attrs:{id:"webpack4-配置-ssr-环境遇到-document-is-not-defined-原文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webpack4-配置-ssr-环境遇到-document-is-not-defined-原文"}},[e._v("#")]),e._v(" webpack4 配置 ssr 环境遇到“document is not defined”  "),r("a",{attrs:{href:"https://www.jb51.net/article/172661.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("原文"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("在服务端渲染打包的配置中使用了mini-css-extract-plugin是的server bundle中会使用到document，node环境中不存在window对象，所以报错。")]),e._v(" "),r("p",[e._v("解决办法修改loader")])])}),[],!1,null,null,null);t.default=s.exports}}]);