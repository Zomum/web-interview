(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{397:function(t,v,a){"use strict";a.r(v);var _=a(42),e=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://juejin.im/entry/57f5d492bf22ec006475238f",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入了解 JavaScript，从作用域链开始（1）"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/entry/57f661e28ac24700589ffb81",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入了解 JavaScript，优化作用域链（2）"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"作用域包括"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域包括"}},[t._v("#")]),t._v(" 作用域包括")]),t._v(" "),a("h5",{attrs:{id:"全局作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),a("p",[t._v("（1）程序(js)最外层定义的函数或者变量")]),t._v(" "),a("p",[t._v("（2）所有末定义直接赋值的变量（不推荐）")]),t._v(" "),a("p",[t._v("（3）所有window对象的属性和方法")]),t._v(" "),a("h5",{attrs:{id:"局部作用域（函数作用域）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部作用域（函数作用域）"}},[t._v("#")]),t._v(" 局部作用域（函数作用域）")]),t._v(" "),a("p",[t._v("局部作用域在函数内创建，在函数内可访问，函数外不可访问。")]),t._v(" "),a("h4",{attrs:{id:"作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),a("p",[t._v("了解之前要知道的几个概念：")]),t._v(" "),a("ul",[a("li",[t._v("变量和函数的声明")]),t._v(" "),a("li",[t._v("函数的生命周期")]),t._v(" "),a("li",[t._v("Activetion Object（AO）、Variable Object（VO）")])]),t._v(" "),a("h5",{attrs:{id:"变量和函数的声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量和函数的声明"}},[t._v("#")]),t._v(" 变量和函数的声明")]),t._v(" "),a("p",[t._v("变量声明：变量的声明只有一种方式，那就是用"),a("code",[t._v("var")]),t._v("关键字声明，直接赋值不是一种声明方式。这仅仅是在全局对象上创建了新的属性（而不是变量）。它们有一下区别：")]),t._v(" "),a("p",[t._v("（1）因为它只是一种赋值，所以不会声明提前")]),t._v(" "),a("p",[t._v("（2）直接赋值形式是在执行阶段创建")]),t._v(" "),a("p",[t._v("（3）变量不能删除（delete），属性可以删除")]),t._v(" "),a("blockquote",[a("p",[t._v("有一个意外情况，就是在“eval”的上下文中，变量是可以删除的：eval('var a = 10;');alert(delete a); // true")])]),t._v(" "),a("p",[t._v("函数声明：函数的声明有三种方式")]),t._v(" "),a("p",[t._v("（1）function name( ){ }直接创建方式")]),t._v(" "),a("p",[t._v("（2）new Funtion构建函数创建")]),t._v(" "),a("p",[t._v("（3）给变量赋值匿名函数方法创建 var add = function(a,b){ return a+b; }")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意")]),t._v("：如果变量名和函数名声明时相同，函数优先声明。")])]),t._v(" "),a("h5",{attrs:{id:"函数的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的生命周期"}},[t._v("#")]),t._v(" 函数的生命周期")]),t._v(" "),a("p",[t._v("函数的的生命周期分为创建和执行两个阶段。")]),t._v(" "),a("p",[t._v("在函数创建阶段，JS解析引擎进行预解析，会将函数声明提前，同时将该函数放到全局作用域中或当前函数的上一级函数的局部作用域中。")]),t._v(" "),a("p",[t._v("在函数执行阶段，JS引擎会将当前函数的局部变量和内部函数进行声明提前，然后再执行业务代码，当函数执行完退出时，释放该函数的执行上下文，并注销该函数的局部变量。")]),t._v(" "),a("h5",{attrs:{id:"什么是ao、vo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是ao、vo"}},[t._v("#")]),t._v(" 什么是AO、VO")]),t._v(" "),a("p",[t._v("AO：Activetion Object（活动对象）\nVO：Variable Object（变量对象）")]),t._v(" "),a("p",[a("strong",[t._v("VO")]),t._v("对应的是函数创建阶段，JS解析引擎进行预解析时，所有的变量和函数的声明，统称为Variable Object。VO是一个与执行上下文相关的特殊对象，它存储着在上下文中声明的以下内容：")]),t._v(" "),a("ul",[a("li",[t._v("变量 (var, 变量声明);")]),t._v(" "),a("li",[t._v("函数声明 (FunctionDeclaration, 缩写为FD);")]),t._v(" "),a("li",[t._v("函数的形参")])]),t._v(" "),a("p",[a("strong",[t._v("AO")]),t._v("对应的是函数执行阶段，当函数被调用执行时，会建立一个执行上下文，该执行上下文包含了函数所需的所有变量，该变量共同组成了一个新的对象就是Activetion Object。该对象包含了：")]),t._v(" "),a("ul",[a("li",[t._v("函数的所有局部变量")]),t._v(" "),a("li",[t._v("函数的所有命名参数")]),t._v(" "),a("li",[t._v("函数的参数集合")]),t._v(" "),a("li",[t._v("函数的this指向")])]),t._v(" "),a("h4",{attrs:{id:"javascript作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript作用域链"}},[t._v("#")]),t._v(" JavaScript作用域链")]),t._v(" "),a("p",[t._v("当代码在一个环境中执行时，会创建变量对象的一个作用域链（scope chain）来保证对执行环境有权访问的变量和函数的有序访问。作用域第一个对象始终是当前执行代码所在环境的变量对象（VO）。")])])}),[],!1,null,null,null);v.default=e.exports}}]);