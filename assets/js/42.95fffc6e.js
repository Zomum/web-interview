(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{364:function(e,r,t){"use strict";t.r(r);var a=t(42),o=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("前端工程师面试大厂肯定会用到算法，这是从求职角度来说。想了解前端和算法的关系，看下面链接")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.zhihu.com/question/28578899",target:"_blank",rel:"noopener noreferrer"}},[e._v("BAT 前端工程师面试对算法一般有怎样的要求？"),t("OutboundLink")],1)]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.im/post/5e904436f265da47fa28c0a7",target:"_blank",rel:"noopener noreferrer"}},[e._v("字节跳动三面四小时的灵魂拷问，结局我哭了但下次还敢！"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://my.oschina.net/u/4419179/blog/3269892",target:"_blank",rel:"noopener noreferrer"}},[e._v("字节跳动 算法全四面 详细面经 已拿意向书！"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("👆这是关于java的面试，有用的包括：算法和网络协议。")]),e._v(" "),t("hr"),e._v(" "),t("h5",{attrs:{id:"【-cyc-】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【-cyc-】"}},[e._v("#")]),e._v(" 【 CyC 】")]),e._v(" "),t("p",[e._v("https://github.com/CyC2018/CS-Notes")]),e._v(" "),t("p",[e._v("👆技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计、Java、Python、C++")]),e._v(" "),t("p",[e._v("https://cyc2018.github.io/CS-Notes/#/")]),e._v(" "),t("p",[e._v("👆项目包含了技术面试必备的基础知识，内容浅显易懂，你不需要花很长的时间去阅读和理解成堆的技术书籍就可以快速掌握这些知识，从而节省宝贵的面试复习时间。")]),e._v(" "),t("hr"),e._v(" "),t("h5",{attrs:{id:"【-时间复杂度-】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【-时间复杂度-】"}},[e._v("#")]),e._v(" 【 时间复杂度  】")]),e._v(" "),t("p",[e._v("https://blog.csdn.net/user11223344abc/article/details/81485842")]),e._v(" "),t("p",[e._v("O(1)<O(logn)<O(n)<O(nlogn)<O(n2)<O(n3)<O(2n)//2的n方<O(n!)<O(nn)   //n的n方")]),e._v(" "),t("p",[t("img",{attrs:{src:"img/image-20200617095540871.png",alt:"image-20200617095540871"}})]),e._v(" "),t("hr"),e._v(" "),t("h5",{attrs:{id:"【-一些算法-】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【-一些算法-】"}},[e._v("#")]),e._v(" 【 一些算法  】")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("给一个正整数，判断是否是2的n次幂")]),e._v(" "),t("p",[e._v("https://leetcode-cn.com/problems/power-of-two/")]),e._v(" "),t("h5",{attrs:{id:"扩展：-3的幂4的幂"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展：-3的幂4的幂"}},[e._v("#")]),e._v(" 扩展： "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/power-of-three/",target:"_blank",rel:"noopener noreferrer"}},[e._v("3的幂"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/power-of-four/",target:"_blank",rel:"noopener noreferrer"}},[e._v("4的幂"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("给一个数组，数组里面有rgb三种数，数量和顺序完全无序，给一个算法按照他想要的r都在前面，g都在中间，b都在后面，用移动次数最少的算法进行计算")]),e._v(" "),t("p",[e._v("https://leetcode-cn.com/problems/sort-colors/")]),e._v(" "),t("h5",{attrs:{id:"扩展：-移动零删除排序数组中的重复项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展：-移动零删除排序数组中的重复项"}},[e._v("#")]),e._v(" 扩展： "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("移动零"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"}},[e._v("删除排序数组中的重复项"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("树的遍历方法有什么，写一个二叉树前序遍历算法")]),e._v(" "),t("p",[e._v("https://leetcode-cn.com/problems/binary-tree-preorder-traversal/")]),e._v(" "),t("h5",{attrs:{id:"扩展：-二叉树的中序遍历二叉树的后序遍历二叉树的层序遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展：-二叉树的中序遍历二叉树的后序遍历二叉树的层序遍历"}},[e._v("#")]),e._v(" 扩展： "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的中序遍历"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-postorder-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的后序遍历"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的层序遍历"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("寻找最近公共父节点  (二叉树的最近公共祖先)")]),e._v(" "),t("p",[e._v("https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/")]),e._v(" "),t("h5",{attrs:{id:"扩展：-二叉搜索树的最近公共祖先两个链表的第一个公共节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展：-二叉搜索树的最近公共祖先两个链表的第一个公共节点"}},[e._v("#")]),e._v(" 扩展： "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉搜索树的最近公共祖先"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/",target:"_blank",rel:"noopener noreferrer"}},[e._v("两个链表的第一个公共节点"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("思维题")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/80701068",target:"_blank",rel:"noopener noreferrer"}},[e._v("有趣的追及问题——猫能追上老鼠吗？"),t("OutboundLink")],1)])])]),e._v(" "),t("hr"),e._v(" "),t("h4",{attrs:{id:"数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[e._v("#")]),e._v(" 数据结构")]),e._v(" "),t("ul",[t("li",[e._v("一维：\n"),t("ul",[t("li",[e._v("基础：数组 array(string)，链表linked list")]),e._v(" "),t("li",[e._v("高级：栈 stack，队列 queue，双端队列 deque，集合 set，映射 map(hash or map)，etc")])])]),e._v(" "),t("li",[e._v("二维：\n"),t("ul",[t("li",[e._v("基础：数 tree，图 graph")]),e._v(" "),t("li",[e._v("高级：二叉搜索树 binary search tree (red-black tree, AVL)，堆 heap，并查集 disjoint set，字典树 Trie，etc")])])]),e._v(" "),t("li",[e._v("特殊：\n"),t("ul",[t("li",[e._v("位运算 Bitwise，布隆过滤器 BloomFilter")]),e._v(" "),t("li",[e._v("LRU Rache")])])])])])}),[],!1,null,null,null);r.default=o.exports}}]);